/**
 * Datto|Autotask PSA Rest API No description provided (generated by Swagger
 * Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git Do not edit the class
 * manually.
 */

export type ActionType = {
  id?: number
  name?: string
  isActive?: boolean
  isSystemActionType?: boolean
  view?: number
}

export type AdditionalInvoiceFieldValue = {
  id?: number
  additionalInvoiceFieldID?: number
  fieldValue?: string
  invoiceBatchID?: number
}

export type ApiVersionResult = {
  apiVersions?: Array<string>
}

export type Appointment = {
  id?: number
  createDateTime?: Date
  creatorResourceID?: number
  description?: string
  endDateTime?: Date
  resourceID?: number
  startDateTime?: Date
  title?: string
  updateDateTime?: Date
}

export type ArticleAttachment = {
  id?: number
  articleID?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  contentType?: string
  creatorType?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentAttachmentID?: number
  parentID?: number
  publish?: number
  title?: string
  data?: string
  parentType?: number
  isTaskAttachment?: boolean
}

export type ArticleConfigurationItemCategoryAssociation = {
  id?: number
  articleID?: number
  installedProductCategoryID?: number
}

export type ArticleNote = {
  id?: number
  createdByResourceID?: number
  createdDateTime?: Date
  description?: string
  articleID?: number
  lastModifiedByResourceID?: number
  lastModifiedDateTime?: Date
  title?: string
}

export type ArticlePlainTextContent = {
  id?: number
  contentData?: string
}

export type ArticleTagAssociation = {
  id?: number
  createDateTime?: Date
  createdByResourceID?: number
  articleID?: number
  tagID?: number
}

export type ArticleTicketAssociation = {
  id?: number
  articleID?: number
  ticketID?: number
}

export type ArticleToArticleAssociation = {
  id?: number
  associatedArticleID?: number
  articleID?: number
}

export type ArticleToDocumentAssociation = {
  id?: number
  associatedDocumentID?: number
  articleID?: number
}

export type AttachmentInfo = {
  id?: number
  articleID?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  companyID?: number
  companyNoteID?: number
  configurationItemID?: number
  configurationItemNoteID?: number
  contentType?: string
  contractID?: number
  contractNoteID?: number
  creatorType?: number
  documentID?: number
  expenseItemID?: number
  expenseReportID?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentAttachmentID?: number
  parentID?: number
  parentType?: number
  projectID?: number
  projectNoteID?: number
  publish?: number
  resourceID?: number
  salesOrderID?: number
  taskID?: number
  taskNoteID?: number
  ticketID?: number
  ticketNoteID?: number
  timeEntryID?: number
  title?: string
}

export type AutotaskVersionResult = {
  majorVersion?: string
  minorVersion?: string
  build?: string
}

export type BillingCode = {
  id?: number
  afterHoursWorkType?: number
  billingCodeType?: number
  department?: number
  description?: string
  externalNumber?: string
  generalLedgerAccount?: number
  isActive?: boolean
  isExcludedFromNewContracts?: boolean
  markupRate?: number
  name?: string
  taxCategoryID?: number
  unitCost?: number
  unitPrice?: number
  useType?: number
}

export type BillingItem = {
  id?: number
  accountManagerWhenApprovedID?: number
  billingCodeID?: number
  billingItemType?: number
  companyID?: number
  configurationItemID?: number
  contractBlockID?: number
  contractChargeID?: number
  contractID?: number
  contractServiceAdjustmentID?: number
  contractServiceBundleAdjustmentID?: number
  contractServiceBundleID?: number
  contractServiceBundlePeriodID?: number
  contractServiceID?: number
  contractServicePeriodID?: number
  description?: string
  expenseItemID?: number
  extendedPrice?: number
  internalCurrencyExtendedPrice?: number
  internalCurrencyRate?: number
  internalCurrencyTaxDollars?: number
  internalCurrencyTotalAmount?: number
  invoiceID?: number
  itemApproverID?: number
  itemDate?: Date
  itemName?: string
  lineItemFullDescription?: string
  lineItemGroupDescription?: string
  milestoneID?: number
  nonBillable?: number
  organizationalLevelAssociationID?: number
  ourCost?: number
  postedDate?: Date
  postedOnTime?: Date
  projectChargeID?: number
  projectID?: number
  purchaseOrderNumber?: string
  quantity?: number
  rate?: number
  roleID?: number
  serviceBundleID?: number
  serviceID?: number
  sortOrderID?: number
  subType?: number
  taskID?: number
  taxDollars?: number
  ticketChargeID?: number
  ticketID?: number
  timeEntryID?: number
  totalAmount?: number
  vendorID?: number
  webServiceDate?: Date
}

export type BillingItemApprovalLevel = {
  id?: number
  approvalDateTime?: Date
  approvalLevel?: number
  approvalResourceID?: number
  timeEntryID?: number
}

export type ChangeOrderCharge = {
  id?: number
  billableAmount?: number
  billingCodeID?: number
  changeOrderHours?: number
  chargeType?: number
  contractServiceBundleID?: number
  contractServiceID?: number
  createDate?: Date
  creatorResourceID?: number
  datePurchased?: Date
  description?: string
  extendedCost?: number
  internalCurrencyBillableAmount?: number
  internalCurrencyUnitPrice?: number
  internalPurchaseOrderNumber?: string
  isBillableToCompany?: boolean
  isBilled?: boolean
  name?: string
  notes?: string
  organizationalLevelAssociationID?: number
  productID?: number
  purchaseOrderNumber?: string
  status?: number
  statusLastModifiedBy?: number
  statusLastModifiedDate?: Date
  taskID?: number
  unitCost?: number
  unitPrice?: number
  unitQuantity?: number
}

export type ChangeRequestLink = {
  id?: number
  changeRequestTicketID?: number
  problemOrIncidentTicketID?: number
}

export type ChecklistLibrary = {
  id?: number
  description?: string
  entityType?: number
  isActive?: boolean
  name?: string
}

export type ChecklistLibraryChecklistItem = {
  id?: number
  checklistLibraryID?: number
  isImportant?: boolean
  itemName?: string
  knowledgebaseArticleID?: number
  position?: number
}

export type ClassificationIcon = {
  id?: number
  description?: string
  isActive?: boolean
  isSystem?: boolean
  name?: string
  relativeUrl?: string
}

export type ClientPortalUser = {
  id?: number
  contactID?: number
  dateFormat?: number
  isClientPortalActive?: boolean
  numberFormat?: number
  password?: string
  securityLevel?: number
  timeFormat?: number
  userName?: string
}

export type CollectionItem = {
  longValue?: number
  stringValue?: string
}

export type ComanagedAssociation = {
  id?: number
  companyID?: number
  isPrimaryComanagedResource?: boolean
  resourceID?: number
}

export type Company<UDF extends string = string> = {
  id?: number
  additionalAddressInformation?: string
  address1?: string
  address2?: string
  alternatePhone1?: string
  alternatePhone2?: string
  apiVendorID?: number
  assetValue?: number
  billToCompanyLocationID?: number
  billToAdditionalAddressInformation?: string
  billingAddress1?: string
  billingAddress2?: string
  billToAddressToUse?: number
  billToAttention?: string
  billToCity?: string
  billToCountryID?: number
  billToState?: string
  billToZipCode?: string
  city?: string
  classification?: number
  companyCategoryID?: number
  companyName?: string
  companyNumber?: string
  companyType?: number
  competitorID?: number
  countryID?: number
  createDate?: Date
  createdByResourceID?: number
  currencyID?: number
  fax?: string
  impersonatorCreatorResourceID?: number
  invoiceEmailMessageID?: number
  invoiceMethod?: number
  invoiceNonContractItemsToParentCompany?: boolean
  invoiceTemplateID?: number
  isActive?: boolean
  isClientPortalActive?: boolean
  isEnabledForComanaged?: boolean
  isSample?: boolean
  isTaskFireActive?: boolean
  isTaxExempt?: boolean
  lastActivityDate?: Date
  lastTrackedModifiedDateTime?: Date
  marketSegmentID?: number
  ownerResourceID?: number
  parentCompanyID?: number
  phone?: string
  postalCode?: string
  purchaseOrderTemplateID?: number
  quoteEmailMessageID?: number
  quoteTemplateID?: number
  sicCode?: string
  state?: string
  stockMarket?: string
  stockSymbol?: string
  surveyCompanyRating?: number
  taxID?: string
  taxRegionID?: number
  territoryID?: number
  webAddress?: string
  userDefinedFields?: UserDefinedField<UDF>[]
}

export type CompanyAlert = {
  id?: number
  alertText?: string
  alertTypeID?: number
  companyID?: number
}

export type CompanyAttachment = {
  id?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  companyID?: number
  companyNoteID?: number
  contentType?: string
  creatorType?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentAttachmentID?: number
  parentID?: number
  publish?: number
  salesOrderID?: number
  title?: string
  data?: string
  parentType?: number
  isTaskAttachment?: boolean
}

export type CompanyCategory = {
  id?: number
  displayColorRGB?: number
  isActive?: boolean
  isApiOnly?: boolean
  isGlobalDefault?: boolean
  name?: string
  nickname?: string
}

export type CompanyLocation = {
  id?: number
  address1?: string
  address2?: string
  alternatePhone1?: string
  alternatePhone2?: string
  city?: string
  companyID?: number
  countryID?: number
  description?: string
  fax?: string
  isActive?: boolean
  isPrimary?: boolean
  isTaxExempt?: boolean
  overrideCompanyTaxSettings?: boolean
  name?: string
  phone?: string
  postalCode?: string
  roundtripDistance?: number
  state?: string
  taxRegionID?: number
}

export type CompanyNote = {
  id?: number
  actionType?: number
  assignedResourceID?: number
  companyID?: number
  completedDateTime?: Date
  contactID?: number
  createDateTime?: Date
  endDateTime?: Date
  impersonatorCreatorResourceID?: number
  impersonatorUpdaterResourceID?: number
  lastModifiedDate?: Date
  name?: string
  note?: string
  opportunityID?: number
  startDateTime?: Date
}

export type CompanyNoteAttachment = {
  id?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  companyID?: number
  companyNoteID?: number
  contentType?: string
  creatorType?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentID?: number
  publish?: number
  salesOrderID?: number
  title?: string
  data?: string
  parentType?: number
  isTaskAttachment?: boolean
}

export type CompanySiteConfiguration<UDF extends string = string> = {
  id?: number
  companyID?: number
  locationName?: string
  userDefinedFields?: UserDefinedField<UDF>[]
}

export type CompanyTeam = {
  id?: number
  companyID?: number
  isAssociatedAsComanaged?: boolean
  resourceID?: number
}

export type CompanyToDo = {
  id?: number
  actionType?: number
  activityDescription?: string
  assignedToResourceID?: number
  companyID?: number
  completedDate?: Date
  contactID?: number
  contractID?: number
  createDateTime?: Date
  creatorResourceID?: number
  endDateTime?: Date
  impersonatorCreatorResourceID?: number
  lastModifiedDate?: Date
  opportunityID?: number
  startDateTime?: Date
  ticketID?: number
}

export type CompanyWebhook = {
  id?: number
  deactivationUrl?: string
  isActive?: boolean
  isReady?: boolean
  isSubscribedToCreateEvents?: boolean
  isSubscribedToDeleteEvents?: boolean
  isSubscribedToUpdateEvents?: boolean
  name?: string
  notificationEmailAddress?: string
  ownerResourceID?: number
  secretKey?: string
  sendThresholdExceededNotification?: boolean
  webhookGUID?: string
  webhookUrl?: string
}

export type CompanyWebhookExcludedResource = {
  id?: number
  resourceID?: number
  webhookID?: number
}

export type CompanyWebhookField = {
  id?: number
  fieldID?: number
  isDisplayAlwaysField?: boolean
  isSubscribedField?: boolean
  webhookID?: number
}

export type CompanyWebhookUdfField = {
  id?: number
  isDisplayAlwaysField?: boolean
  isSubscribedField?: boolean
  udfFieldID?: number
  webhookID?: number
}

export type ConfigurationItem<UDF extends string = string> = {
  id?: number
  apiVendorID?: number
  configurationItemCategoryID?: number
  companyID?: number
  companyLocationID?: number
  configurationItemType?: number
  contactID?: number
  contractID?: number
  contractServiceBundleID?: number
  contractServiceID?: number
  createDate?: Date
  createdByPersonID?: number
  dailyCost?: number
  dattoAvailableKilobytes?: number
  dattoDeviceMemoryMegabytes?: number
  dattoDrivesErrors?: boolean
  dattoHostname?: string
  dattoInternalIP?: string
  dattoKernelVersionID?: number
  dattoLastCheckInDateTime?: Date
  dattoNICSpeedKilobitsPerSecond?: number
  dattoNumberOfAgents?: number
  dattoNumberOfDrives?: number
  dattoNumberOfVolumes?: number
  dattoOffsiteUsedBytes?: number
  dattoOSVersionID?: number
  dattoPercentageUsed?: number
  dattoProtectedKilobytes?: number
  dattoRemoteIP?: string
  dattoSerialNumber?: string
  dattoUptimeSeconds?: number
  dattoUsedKilobytes?: number
  dattoZFSVersionID?: number
  deviceNetworkingID?: string
  domain?: string
  domainRegistrarID?: number
  domainRegistrationDateTime?: Date
  domainLastUpdatedDateTime?: Date
  domainExpirationDateTime?: Date
  hourlyCost?: number
  impersonatorCreatorResourceID?: number
  installDate?: Date
  installedByContactID?: number
  installedByID?: number
  isActive?: boolean
  lastActivityPersonID?: number
  lastActivityPersonType?: number
  lastModifiedTime?: Date
  location?: string
  monthlyCost?: number
  notes?: string
  numberOfUsers?: number
  parentConfigurationItemID?: number
  perUseCost?: number
  productID?: number
  referenceNumber?: string
  referenceTitle?: string
  rmmDeviceAuditAntivirusStatusID?: number
  rmmDeviceAuditArchitectureID?: number
  rmmDeviceAuditBackupStatusID?: number
  rmmDeviceAuditDescription?: string
  rmmDeviceAuditDeviceTypeID?: number
  rmmDeviceAuditDisplayAdaptorID?: number
  rmmDeviceAuditDomainID?: number
  rmmDeviceAuditExternalIPAddress?: string
  rmmDeviceAuditHostname?: string
  rmmDeviceAuditIPAddress?: string
  rmmDeviceAuditLastUser?: string
  rmmDeviceAuditMacAddress?: string
  rmmDeviceAuditManufacturerID?: number
  rmmDeviceAuditFirmwareID?: number
  rmmDeviceAuditMemoryBytes?: number
  rmmDeviceAuditMissingPatchCount?: number
  rmmDeviceAuditMobileNetworkOperatorID?: number
  rmmDeviceAuditMobileNumber?: string
  rmmDeviceAuditModelID?: number
  rmmDeviceAuditMotherboardID?: number
  rmmDeviceAuditOperatingSystem?: string
  rmmDeviceAuditPatchStatusID?: number
  rmmDeviceAuditProcessorID?: number
  rmmDeviceAuditServicePackID?: number
  rmmDeviceAuditSNMPContact?: string
  rmmDeviceAuditSNMPLocation?: string
  rmmDeviceAuditSNMPName?: string
  rmmDeviceAuditSoftwareStatusID?: number
  rmmDeviceAuditStorageBytes?: number
  rmmDeviceID?: number
  rmmDeviceUID?: string
  rmmVsaxDeviceID?: string
  rmmOpenAlertCount?: number
  serialNumber?: string
  serviceBundleID?: number
  serviceID?: number
  serviceLevelAgreementID?: number
  setupFee?: number
  sourceChargeID?: number
  sourceChargeType?: number
  sslSource?: string
  sslCommonName?: string
  sslValidFromDateTime?: Date
  sslValidUntilDateTime?: Date
  sslIssuedBy?: string
  sslOrganization?: string
  sslOrganizationUnit?: string
  sslLocation?: string
  sslSerialNumber?: string
  sslSignatureAlgorithm?: string
  vendorID?: number
  warrantyExpirationDate?: Date
  rmmIsInMaintenanceMode?: boolean
  rmmIsMobileDeviceManagementEnrolled?: boolean
  rmmDeviceUrl?: string
  userDefinedFields?: UserDefinedField<UDF>[]
}

export type ConfigurationItemAttachment = {
  id?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  configurationItemID?: number
  configurationItemNoteID?: number
  contentType?: string
  creatorType?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentAttachmentID?: number
  parentID?: number
  publish?: number
  title?: string
  data?: string
  parentType?: number
  isTaskAttachment?: boolean
}

export type ConfigurationItemBillingProductAssociation = {
  id?: number
  billingProductID?: number
  configurationItemID?: number
  effectiveDate?: Date
  expirationDate?: Date
}

export type ConfigurationItemCategory = {
  id?: number
  displayColorRGB?: number
  isActive?: boolean
  isClientPortalDefault?: boolean
  isGlobalDefault?: boolean
  name?: string
  nickname?: string
}

export type ConfigurationItemCategoryUdfAssociation = {
  id?: number
  configurationItemCategoryID?: number
  isRequired?: boolean
  userDefinedFieldDefinitionID?: number
}

export type ConfigurationItemDnsRecord = {
  id?: number
  createDateTime?: Date
  data?: string
  installedProductID?: number
  timeToLiveSeconds?: number
  dnsType?: string
}

export type ConfigurationItemExt<UDF extends string = string> = {
  id?: number
  apiVendorID?: number
  companyID?: number
  companyLocationID?: number
  configurationItemCategoryID?: number
  configurationItemType?: number
  contactID?: number
  contractID?: number
  contractServiceBundleID?: number
  contractServiceID?: number
  createDate?: Date
  createdByPersonID?: number
  dailyCost?: number
  dattoAvailableKilobytes?: number
  dattoDeviceMemoryMegabytes?: number
  dattoDrivesErrors?: boolean
  dattoHostname?: string
  dattoInternalIP?: string
  dattoKernelVersionID?: string
  dattoLastCheckInDateTime?: Date
  dattoNICSpeedKilobitsPerSecond?: number
  dattoNumberOfAgents?: number
  dattoNumberOfDrives?: number
  dattoNumberOfVolumes?: number
  dattoOffsiteUsedBytes?: number
  dattoOSVersionID?: string
  dattoPercentageUsed?: number
  dattoProtectedKilobytes?: number
  dattoRemoteIP?: string
  dattoSerialNumber?: string
  dattoUptimeSeconds?: number
  dattoUsedKilobytes?: number
  dattoZFSVersionID?: string
  deviceNetworkingID?: string
  domain?: string
  domainRegistrarID?: number
  domainRegistrationDateTime?: Date
  domainLastUpdatedDateTime?: Date
  domainExpirationDateTime?: Date
  hourlyCost?: number
  impersonatorCreatorResourceID?: number
  installDate?: Date
  installedByContactID?: number
  installedByID?: number
  isActive?: boolean
  lastActivityPersonID?: number
  lastActivityPersonType?: number
  lastModifiedTime?: Date
  location?: string
  monthlyCost?: number
  notes?: string
  numberOfUsers?: number
  parentConfigurationItemID?: number
  perUseCost?: number
  productID?: number
  referenceNumber?: string
  referenceTitle?: string
  rmmDeviceAuditAntivirusStatusID?: string
  rmmDeviceAuditArchitectureID?: string
  rmmDeviceAuditBackupStatusID?: string
  rmmDeviceAuditDescription?: string
  rmmDeviceAuditDeviceTypeID?: string
  rmmDeviceAuditDisplayAdaptorID?: string
  rmmDeviceAuditDomainID?: string
  rmmDeviceAuditExternalIPAddress?: string
  rmmDeviceAuditHostname?: string
  rmmDeviceAuditIPAddress?: string
  rmmDeviceAuditLastUser?: string
  rmmDeviceAuditMacAddress?: string
  rmmDeviceAuditManufacturerID?: string
  rmmDeviceAuditFirmwareID?: string
  rmmDeviceAuditMemoryBytes?: number
  rmmDeviceAuditMissingPatchCount?: number
  rmmDeviceAuditMobileNetworkOperatorID?: string
  rmmDeviceAuditMobileNumber?: string
  rmmDeviceAuditModelID?: string
  rmmDeviceAuditMotherboardID?: string
  rmmDeviceAuditOperatingSystemID?: string
  rmmDeviceAuditOperatingSystemNameID?: string
  rmmDeviceAuditOperatingSystemVersionID?: string
  rmmDeviceAuditPatchStatusID?: string
  rmmDeviceAuditProcessorID?: string
  rmmDeviceAuditServicePackID?: string
  rmmDeviceAuditSNMPContact?: string
  rmmDeviceAuditSNMPLocation?: string
  rmmDeviceAuditSNMPName?: string
  rmmDeviceAuditSoftwareStatusID?: string
  rmmDeviceAuditStorageBytes?: number
  rmmDeviceID?: number
  rmmDeviceUID?: string
  rmmVsaxDeviceID?: string
  rmmOpenAlertCount?: number
  serialNumber?: string
  serviceBundleID?: number
  serviceID?: number
  serviceLevelAgreementID?: number
  setupFee?: number
  sourceChargeID?: number
  sourceChargeType?: number
  sslSource?: string
  sslCommonName?: string
  sslValidFromDateTime?: Date
  sslValidUntilDateTime?: Date
  sslIssuedBy?: string
  sslOrganization?: string
  sslOrganizationUnit?: string
  sslLocation?: string
  sslSerialNumber?: string
  sslSignatureAlgorithm?: string
  vendorID?: number
  warrantyExpirationDate?: Date
  rmmIsInMaintenanceMode?: boolean
  rmmIsMobileDeviceManagementEnrolled?: boolean
  rmmDeviceUrl?: string
  userDefinedFields?: UserDefinedField<UDF>[]
}

export type ConfigurationItemNote = {
  id?: number
  configurationItemID?: number
  createDateTime?: Date
  creatorResourceID?: number
  description?: string
  impersonatorCreatorResourceID?: number
  impersonatorUpdaterResourceID?: number
  lastActivityDate?: Date
  noteType?: number
  title?: string
}

export type ConfigurationItemNoteAttachment = {
  id?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  configurationItemID?: number
  configurationItemNoteID?: number
  contentType?: string
  creatorType?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentID?: number
  publish?: number
  title?: string
  data?: string
  parentType?: number
  isTaskAttachment?: boolean
}

export type ConfigurationItemRelatedItem = {
  id?: number
  configurationItemID?: number
  relatedConfigurationItemID?: number
  relationship?: number
}

export type ConfigurationItemSslSubjectAlternativeName = {
  id?: number
  configurationItemID?: number
  name?: string
}

export type ConfigurationItemType = {
  id?: number
  isActive?: boolean
  name?: string
}

export type ConfigurationItemWebhook = {
  id?: number
  deactivationUrl?: string
  isActive?: boolean
  isReady?: boolean
  isSubscribedToCreateEvents?: boolean
  isSubscribedToDeleteEvents?: boolean
  isSubscribedToUpdateEvents?: boolean
  name?: string
  notificationEmailAddress?: string
  ownerResourceID?: number
  secretKey?: string
  sendThresholdExceededNotification?: boolean
  webhookGUID?: string
  webhookUrl?: string
}

export type ConfigurationItemWebhookExcludedResource = {
  id?: number
  resourceID?: number
  webhookID?: number
}

export type ConfigurationItemWebhookField = {
  id?: number
  fieldID?: number
  isDisplayAlwaysField?: boolean
  isSubscribedField?: boolean
  webhookID?: number
}

export type ConfigurationItemWebhookUdfField = {
  id?: number
  isDisplayAlwaysField?: boolean
  isSubscribedField?: boolean
  udfFieldID?: number
  webhookID?: number
}

export type Contact<UDF extends string = string> = {
  id?: number
  additionalAddressInformation?: string
  addressLine?: string
  addressLine1?: string
  alternatePhone?: string
  apiVendorID?: number
  bulkEmailOptOutTime?: Date
  city?: string
  companyID?: number
  companyLocationID?: number
  countryID?: number
  createDate?: Date
  emailAddress?: string
  emailAddress2?: string
  emailAddress3?: string
  extension?: string
  externalID?: string
  facebookUrl?: string
  faxNumber?: string
  firstName?: string
  impersonatorCreatorResourceID?: number
  isActive?: number
  isOptedOutFromBulkEmail?: boolean
  lastActivityDate?: Date
  lastModifiedDate?: Date
  lastName?: string
  linkedInUrl?: string
  middleInitial?: string
  mobilePhone?: string
  namePrefix?: number
  nameSuffix?: number
  note?: string
  receivesEmailNotifications?: boolean
  phone?: string
  primaryContact?: boolean
  roomNumber?: string
  solicitationOptOut?: boolean
  solicitationOptOutTime?: Date
  state?: string
  surveyOptOut?: boolean
  title?: string
  twitterUrl?: string
  zipCode?: string
  userDefinedFields?: UserDefinedField<UDF>[]
}

export type ContactBillingProductAssociation = {
  id?: number
  billingProductID?: number
  contactID?: number
  effectiveDate?: Date
  expirationDate?: Date
}

export type ContactGroup = {
  id?: number
  name?: string
  isActive?: boolean
}

export type ContactGroupContact = {
  id?: number
  contactId?: number
  contactGroupId?: number
}

export type ContactWebhook = {
  id?: number
  deactivationUrl?: string
  isActive?: boolean
  isReady?: boolean
  isSubscribedToCreateEvents?: boolean
  isSubscribedToDeleteEvents?: boolean
  isSubscribedToUpdateEvents?: boolean
  name?: string
  notificationEmailAddress?: string
  ownerResourceID?: number
  secretKey?: string
  sendThresholdExceededNotification?: boolean
  webhookGUID?: string
  webhookUrl?: string
}

export type ContactWebhookExcludedResource = {
  id?: number
  resourceID?: number
  webhookID?: number
}

export type ContactWebhookField = {
  id?: number
  fieldID?: number
  isDisplayAlwaysField?: boolean
  isSubscribedField?: boolean
  webhookID?: number
}

export type ContactWebhookUdfField = {
  id?: number
  isDisplayAlwaysField?: boolean
  isSubscribedField?: boolean
  udfFieldID?: number
  webhookID?: number
}

export type Contract<UDF extends string = string> = {
  id?: number
  billingPreference?: number
  billToCompanyContactID?: number
  billToCompanyID?: number
  companyID?: number
  contactID?: number
  contactName?: string
  contractCategory?: number
  contractExclusionSetID?: number
  contractName?: string
  contractNumber?: string
  contractPeriodType?: number
  contractType?: number
  description?: string
  endDate?: Date
  estimatedCost?: number
  estimatedHours?: number
  estimatedRevenue?: number
  exclusionContractID?: number
  internalCurrencyOverageBillingRate?: number
  internalCurrencySetupFee?: number
  isCompliant?: boolean
  isDefaultContract?: boolean
  lastModifiedDateTime?: Date
  opportunityID?: number
  organizationalLevelAssociationID?: number
  overageBillingRate?: number
  purchaseOrderNumber?: string
  renewedContractID?: number
  serviceLevelAgreementID?: number
  setupFee?: number
  setupFeeBillingCodeID?: number
  startDate?: Date
  status?: number
  timeReportingRequiresStartAndStopTimes?: number
  userDefinedFields?: UserDefinedField<UDF>[]
}

export type ContractBillingRule = {
  id?: number
  contractID?: number
  createChargesAsBillable?: boolean
  dailyProratedCost?: number
  dailyProratedPrice?: number
  determineUnits?: number
  endDate?: Date
  executionMethod?: number
  includeItemsInChargeDescription?: boolean
  invoiceDescription?: string
  isActive?: boolean
  isDailyProrationEnabled?: boolean
  maximumUnits?: number
  minimumUnits?: number
  productID?: number
  startDate?: Date
}

export type ContractBlock = {
  id?: number
  contractID?: number
  datePurchased?: Date
  endDate?: Date
  hourlyRate?: number
  hours?: number
  hoursApproved?: number
  invoiceNumber?: string
  isPaid?: boolean
  paymentNumber?: string
  paymentType?: number
  startDate?: Date
  status?: number
}

export type ContractBlockHourFactor = {
  id?: number
  blockHourMultiplier?: number
  contractHourlyRate?: number
  contractID?: number
  internalCurrencyContractHourlyRate?: number
  roleID?: number
}

export type ContractCharge = {
  id?: number
  billableAmount?: number
  billingCodeID?: number
  chargeType?: number
  contractID?: number
  contractServiceBundleID?: number
  contractServiceID?: number
  createDate?: Date
  creatorResourceID?: number
  datePurchased?: Date
  description?: string
  extendedCost?: number
  internalCurrencyBillableAmount?: number
  internalCurrencyUnitPrice?: number
  internalPurchaseOrderNumber?: string
  isBillableToCompany?: boolean
  isBilled?: boolean
  name?: string
  notes?: string
  organizationalLevelAssociationID?: number
  productID?: number
  purchaseOrderNumber?: string
  status?: number
  statusLastModifiedBy?: number
  statusLastModifiedDate?: Date
  unitCost?: number
  unitPrice?: number
  unitQuantity?: number
}

export type ContractExclusionBillingCode = {
  id?: number
  billingCodeID?: number
  contractID?: number
}

export type ContractExclusionRole = {
  id?: number
  contractID?: number
  roleID?: number
}

export type ContractExclusionSet = {
  id?: number
  description?: string
  isActive?: boolean
  name?: string
}

export type ContractExclusionSetExcludedRole = {
  id?: number
  contractExclusionSetID?: number
  excludedRoleID?: number
}

export type ContractExclusionSetExcludedWorkType = {
  id?: number
  contractExclusionSetID?: number
  excludedWorkTypeID?: number
}

export type ContractMilestone = {
  id?: number
  amount?: number
  billingCodeID?: number
  contractID?: number
  createDate?: Date
  creatorResourceID?: number
  dateDue?: Date
  description?: string
  internalCurrencyAmount?: number
  isInitialPayment?: boolean
  organizationalLevelAssociationID?: number
  status?: number
  title?: string
}

export type ContractNote = {
  id?: number
  contractID?: number
  createDateTime?: Date
  creatorResourceID?: number
  description?: string
  impersonatorCreatorResourceID?: number
  impersonatorUpdaterResourceID?: number
  lastActivityDate?: Date
  title?: string
}

export type ContractNoteAttachment = {
  id?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  contentType?: string
  contractID?: number
  contractNoteID?: number
  creatorType?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentID?: number
  publish?: number
  title?: string
  data?: string
  parentType?: number
  isTaskAttachment?: boolean
}

export type ContractRate = {
  id?: number
  contractHourlyRate?: number
  contractID?: number
  internalCurrencyContractHourlyRate?: number
  roleID?: number
}

export type ContractRetainer = {
  id?: number
  amount?: number
  amountApproved?: number
  contractID?: number
  datePurchased?: Date
  endDate?: Date
  internalCurrencyAmount?: number
  internalCurrencyAmountApproved?: number
  invoiceNumber?: string
  isPaid?: boolean
  paymentID?: number
  paymentNumber?: string
  startDate?: Date
  status?: number
}

export type ContractRoleCost = {
  id?: number
  contractID?: number
  rate?: number
  resourceID?: number
  roleID?: number
}

export type ContractService = {
  id?: number
  contractID?: number
  internalCurrencyAdjustedPrice?: number
  internalCurrencyUnitPrice?: number
  internalDescription?: string
  invoiceDescription?: string
  quoteItemID?: number
  serviceID?: number
  unitCost?: number
  unitPrice?: number
}

export type ContractServiceAdjustment = {
  id?: number
  adjustedUnitCost?: number
  adjustedUnitPrice?: number
  allowRepeatService?: boolean
  contractID?: number
  contractServiceID?: number
  effectiveDate?: Date
  quoteItemID?: number
  serviceID?: number
  unitChange?: number
}

export type ContractServiceBundle = {
  id?: number
  adjustedPrice?: number
  contractID?: number
  internalCurrencyAdjustedPrice?: number
  internalCurrencyUnitPrice?: number
  internalDescription?: string
  invoiceDescription?: string
  quoteItemID?: number
  serviceBundleID?: number
  unitPrice?: number
}

export type ContractServiceBundleAdjustment = {
  id?: number
  adjustedUnitPrice?: number
  allowRepeatServiceBundle?: boolean
  contractID?: number
  contractServiceBundleID?: number
  effectiveDate?: Date
  quoteItemID?: number
  serviceBundleID?: number
  unitChange?: number
}

export type ContractServiceBundleUnit = {
  id?: number
  approveAndPostDate?: Date
  contractID?: number
  contractServiceBundleID?: number
  cost?: number
  endDate?: Date
  internalCurrencyPrice?: number
  organizationalLevelAssociationID?: number
  price?: number
  serviceBundleID?: number
  startDate?: Date
  units?: number
}

export type ContractServiceUnit = {
  id?: number
  approveAndPostDate?: Date
  contractID?: number
  contractServiceID?: number
  cost?: number
  endDate?: Date
  internalCurrencyPrice?: number
  organizationalLevelAssociationID?: number
  price?: number
  serviceID?: number
  startDate?: Date
  units?: number
  vendorCompanyID?: number
}

export type ContractTicketPurchase = {
  id?: number
  contractID?: number
  datePurchased?: Date
  endDate?: Date
  invoiceNumber?: string
  isPaid?: boolean
  paymentNumber?: string
  paymentType?: number
  perTicketRate?: number
  startDate?: Date
  status?: number
  ticketsPurchased?: number
  ticketsUsed?: number
}

export type Country = {
  id?: number
  addressFormatID?: number
  countryCode?: string
  displayName?: string
  invoiceTemplateID?: number
  isActive?: boolean
  isDefaultCountry?: boolean
  name?: string
  purchaseOrderTemplateID?: number
  quoteTemplateID?: number
}

export type Currency = {
  id?: number
  currencyNegativeFormat?: string
  currencyPositiveFormat?: string
  description?: string
  displaySymbol?: number
  exchangeRate?: number
  isActive?: boolean
  isInternalCurrency?: boolean
  lastModifiedDateTime?: Date
  name?: string
  updateResourceId?: number
}

export type DeletedTaskActivityLog = {
  id?: number
  typeID?: number
  taskID?: number
  taskNumber?: string
  noteOrAttachmentTitle?: string
  createdByResourceID?: number
  activityDateTime?: Date
  startDateTime?: Date
  endDateTime?: Date
  hoursWorked?: number
  deletedByResourceID?: number
  deletedDateTime?: Date
}

export type DeletedTicketActivityLog = {
  id?: number
  typeID?: number
  ticketID?: number
  ticketNumber?: string
  noteOrAttachmentTitle?: string
  createdByResourceID?: number
  activityDateTime?: Date
  startDateTime?: Date
  endDateTime?: Date
  hoursWorked?: number
  deletedByResourceID?: number
  deletedDateTime?: Date
}

export type DeletedTicketLog = {
  id?: number
  ticketID?: number
  ticketNumber?: string
  ticketTitle?: string
  deletedByResourceID?: number
  deletedDateTime?: Date
}

export type Department = {
  id?: number
  description?: string
  name?: string
  number?: string
  primaryLocationID?: number
}

export type Document = {
  id?: number
  companyID?: number
  createdByResourceID?: number
  createdDateTime?: Date
  documentCategoryID?: number
  errorCodes?: string
  isActive?: boolean
  keywords?: string
  lastModifiedByResourceID?: number
  lastModifiedDateTime?: Date
  publish?: number
  referenceLink?: string
  title?: string
}

export type DocumentAttachment = {
  id?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  contentType?: string
  creatorType?: number
  documentID?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentAttachmentID?: number
  parentID?: number
  title?: string
  data?: string
  publish?: number
  parentType?: number
  isTaskAttachment?: boolean
}

export type DocumentCategory = {
  id?: number
  description?: string
  name?: string
  parentCategoryID?: number
}

export type DocumentChecklistItem = {
  id?: number
  documentID?: number
  isImportant?: boolean
  itemName?: string
  position?: number
}

export type DocumentChecklistLibrary = {
  id?: number
  checklistLibraryID?: number
  documentID?: number
}

export type DocumentConfigurationItemAssociation = {
  id?: number
  configurationItemID?: number
  documentID?: number
}

export type DocumentConfigurationItemCategoryAssociation = {
  id?: number
  documentID?: number
  installedProductCategoryID?: number
}

export type DocumentNote = {
  id?: number
  createdByResourceID?: number
  createdDateTime?: Date
  description?: string
  documentID?: number
  lastModifiedByResourceID?: number
  lastModifiedDateTime?: Date
  title?: string
}

export type DocumentPlainTextContent = {
  id?: number
  contentData?: string
}

export type DocumentTagAssociation = {
  id?: number
  createDateTime?: Date
  createdByResourceID?: number
  documentID?: number
  tagID?: number
}

export type DocumentTicketAssociation = {
  id?: number
  documentID?: number
  ticketID?: number
}

export type DocumentToArticleAssociation = {
  id?: number
  associatedArticleID?: number
  documentID?: number
}

export type DocumentToDocumentAssociation = {
  id?: number
  associatedDocumentID?: number
  documentID?: number
}

export type DomainRegistrar = {
  id?: number
  name?: string
  url?: string
}

export type ExpenseItem = {
  id?: number
  companyID?: number
  description?: string
  destination?: string
  entertainmentLocation?: string
  expenseCategory?: number
  expenseCurrencyExpenseAmount?: number
  expenseCurrencyID?: number
  expenseDate?: Date
  expenseReportID?: number
  glCode?: string
  haveReceipt?: boolean
  internalCurrencyExpenseAmount?: number
  internalCurrencyReimbursementAmount?: number
  isBillableToCompany?: boolean
  isReimbursable?: boolean
  isRejected?: boolean
  miles?: number
  odometerEnd?: number
  odometerStart?: number
  origin?: string
  paymentType?: number
  projectID?: number
  purchaseOrderNumber?: string
  reimbursementCurrencyReimbursementAmount?: number
  taskID?: number
  ticketID?: number
  workType?: number
}

export type ExpenseItemAttachment = {
  id?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  contentType?: string
  creatorType?: number
  expenseItemID?: number
  expenseReportID?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentID?: number
  publish?: number
  title?: string
  data?: string
  parentType?: number
  isTaskAttachment?: boolean
}

export type ExpenseReport = {
  id?: number
  amountDue?: number
  approvedDate?: Date
  approverID?: number
  departmentNumber?: string
  internalCurrencyCashAdvanceAmount?: number
  internalCurrencyExpenseTotal?: number
  name?: string
  organizationalLevelAssociationID?: number
  quickBooksReferenceNumber?: string
  reimbursementCurrencyAmountDue?: number
  reimbursementCurrencyCashAdvanceAmount?: number
  reimbursementCurrencyID?: number
  rejectionReason?: string
  status?: number
  submit?: boolean
  submitDate?: Date
  submitterID?: number
  weekEnding?: Date
}

export type ExpenseReportAttachment = {
  id?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  contentType?: string
  creatorType?: number
  expenseItemID?: number
  expenseReportID?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentID?: number
  publish?: number
  title?: string
  data?: string
  parentType?: number
  isTaskAttachment?: boolean
}

export type FileQueryResult = {
  id?: number
  contentType?: string
  fileName?: string
  fileSize?: number
  data?: Array<ModelByte>
}

export type Holiday = {
  id?: number
  holidayDate?: Date
  holidayName?: string
  holidaySetID?: number
}

export type HolidaySet = {
  id?: number
  holidaySetDescription?: string
  holidaySetName?: string
}

export type IntegrationVendorInsight = {
  id?: number
  createDateTime?: Date
  description?: string
  height?: number
  insightCategory?: number
  insightKey?: string
  isActive?: boolean
  lastModifiedDateTime?: Date
  referenceUrl?: string
  secret?: string
  title?: string
  vendorSuppliedID?: string
}

export type IntegrationVendorWidget = {
  id?: number
  createDateTime?: Date
  description?: string
  isActive?: boolean
  lastModifiedDateTime?: Date
  referenceUrl?: string
  secret?: string
  title?: string
  vendorSuppliedID?: string
  widgetKey?: string
  width?: number
}

export type InternalLocation = {
  id?: number
  additionalAddressInfo?: string
  address1?: string
  address2?: string
  city?: string
  country?: string
  holidaySetId?: number
  isDefault?: boolean
  name?: string
  postalCode?: string
  state?: string
  timeZone?: string
}

export type InternalLocationWithBusinessHours = {
  id?: number
  additionalAddressInfo?: string
  address1?: string
  address2?: string
  city?: string
  countryID?: number
  dateFormat?: string
  firstDayOfWeek?: number
  fridayBusinessHoursEndTime?: Date
  fridayBusinessHoursStartTime?: Date
  fridayExtendedHoursEndTime?: Date
  fridayExtendedHoursStartTime?: Date
  holidayExtendedHoursEndTime?: Date
  holidayExtendedHoursStartTime?: Date
  holidayHoursEndTime?: Date
  holidayHoursStartTime?: Date
  holidayHoursType?: number
  holidaySetID?: number
  isDefault?: boolean
  mondayBusinessHoursEndTime?: Date
  mondayBusinessHoursStartTime?: Date
  mondayExtendedHoursEndTime?: Date
  mondayExtendedHoursStartTime?: Date
  name?: string
  noHoursOnHolidays?: boolean
  numberFormat?: string
  postalCode?: string
  saturdayBusinessHoursEndTime?: Date
  saturdayBusinessHoursStartTime?: Date
  saturdayExtendedHoursEndTime?: Date
  saturdayExtendedHoursStartTime?: Date
  state?: string
  sundayBusinessHoursEndTime?: Date
  sundayBusinessHoursStartTime?: Date
  sundayExtendedHoursEndTime?: Date
  sundayExtendedHoursStartTime?: Date
  thursdayBusinessHoursEndTime?: Date
  thursdayBusinessHoursStartTime?: Date
  thursdayExtendedHoursEndTime?: Date
  thursdayExtendedHoursStartTime?: Date
  timeFormat?: string
  timeZoneID?: number
  tuesdayBusinessHoursEndTime?: Date
  tuesdayBusinessHoursStartTime?: Date
  tuesdayExtendedHoursEndTime?: Date
  tuesdayExtendedHoursStartTime?: Date
  wednesdayBusinessHoursEndTime?: Date
  wednesdayBusinessHoursStartTime?: Date
  wednesdayExtendedHoursEndTime?: Date
  wednesdayExtendedHoursStartTime?: Date
}

export type InventoryItem = {
  id?: number
  backOrderQuantity?: number
  bin?: string
  impersonatorCreatorResourceID?: number
  inventoryLocationID?: number
  productID?: number
  quantityMaximum?: number
  quantityMinimum?: number
  quantityOnHand?: number
  quantityOnOrder?: number
  quantityPicked?: number
  quantityReserved?: number
  referenceNumber?: string
}

export type InventoryItemSerialNumber = {
  id?: number
  inventoryItemID?: number
  serialNumber?: string
}

export type InventoryLocation = {
  id?: number
  impersonatorCreatorResourceID?: number
  isActive?: boolean
  isDefault?: boolean
  locationName?: string
  resourceID?: number
}

export type InventoryProduct = {
  id?: number
  availableUnits?: number
  backOrderQuantity?: number
  bin?: string
  createDateTime?: Date
  createdByResourceID?: number
  inventoryLocationID?: number
  onHandUnits?: number
  pickedUnits?: number
  productID?: number
  quantityMaximum?: number
  quantityMinimum?: number
  referenceNumber?: string
  reservedUnits?: number
  unitsOnOrder?: number
}

export type InventoryStockedItem = {
  id?: number
  availableUnits?: number
  companyID?: number
  configurationItemID?: number
  createDateTime?: Date
  createdByResourceID?: number
  currentInventoryLocationID?: number
  deliveredUnits?: number
  inventoryProductID?: number
  purchaseOrderItemReceivingID?: number
  onHandUnits?: number
  parentInventoryStockedItemID?: number
  pickedRemovedByResourceID?: number
  pickedRemovedDateTime?: Date
  pickedUnits?: number
  purchaseOrderID?: number
  purchaseOrderItemID?: number
  quoteItemID?: number
  removedUnits?: number
  reservedUnits?: number
  returnPrice?: number
  returnTypeID?: number
  serialNumber?: string
  statusID?: number
  transferredUnits?: number
  unitCost?: number
  vendorID?: number
  vendorInvoiceNumber?: string
  parentStockedItemReceivedUnits?: number
  contractChargeID?: number
  projectChargeID?: number
  ticketChargeID?: number
}

export type InventoryStockedItemAdd = {
  id?: number
  determineNewPriceUsing?: number
  determineCostUsing?: number
  inventoryProductID?: number
  pricePercentage?: number
  quantityBeingAdded?: number
  reasonForUpdate?: string
  returnPrice?: number
  returnTypeID?: number
  serialNumber?: string
  unitCost?: number
  vendorID?: number
  vendorInvoiceNumber?: string
}

export type InventoryStockedItemRemove = {
  id?: number
  inventoryProductID?: number
  inventoryStockedItemID?: number
  quantityBeingRemoved?: number
  reasonForUpdate?: string
}

export type InventoryStockedItemTransfer = {
  id?: number
  newInventoryLocationID?: number
  inventoryProductID?: number
  inventoryStockedItemID?: number
  quantityBeingTransferred?: number
  reasonForUpdate?: string
}

export type InventoryTransfer = {
  id?: number
  fromLocationID?: number
  notes?: string
  productID?: number
  quantityTransferred?: number
  serialNumber?: string
  toLocationID?: number
  transferByResourceID?: number
  transferDate?: Date
  updateNote?: string
}

export type Invoice = {
  id?: number
  batchID?: number
  comments?: string
  companyID?: number
  createDateTime?: Date
  creatorResourceID?: number
  dueDate?: Date
  fromDate?: Date
  invoiceDateTime?: Date
  invoiceEditorTemplateID?: number
  invoiceNumber?: string
  invoiceTotal?: number
  isVoided?: boolean
  orderNumber?: string
  paidDate?: Date
  paymentTerm?: number
  taxGroup?: number
  taxRegionName?: string
  toDate?: Date
  totalTaxValue?: number
  voidedByResourceID?: number
  voidedDate?: Date
  webServiceDate?: Date
}

export type InvoiceMarkupResult = {
  invoiceMarkup?: string
}

export type InvoiceTemplate = {
  id?: number
  coveredByBlockRetainerContractLabel?: string
  coveredByRecurringServiceFixedPricePerTicketContractLabel?: string
  currencyNegativeFormat?: string
  currencyPositiveFormat?: string
  dateFormat?: number
  displayFixedPriceContractLabor?: boolean
  displayRecurringServiceContractLabor?: boolean
  displaySeparateLineItemForEachTax?: boolean
  displayTaxCategory?: boolean
  displayTaxCategorySuperscripts?: boolean
  displayZeroAmountRecurringServicesAndBundles?: boolean
  groupBy?: number
  itemizeItemsInEachGroup?: number
  itemizeServicesAndBundles?: boolean
  name?: string
  nonBillableLaborLabel?: string
  numberFormat?: number
  pageLayout?: number
  pageNumberFormat?: number
  paymentTerms?: number
  rateCostExpression?: string
  showGridHeader?: boolean
  showVerticalGridLines?: boolean
  sortBy?: number
  timeFormat?: number
}

export type KeyValuePair2 = {
  key?: number
  value?: boolean
}

export type KnowledgeBaseArticle = {
  id?: number
  createdByResourceID?: number
  createdDateTime?: Date
  articleCategoryID?: number
  errorCodes?: string
  isActive?: boolean
  keywords?: string
  lastModifiedByResourceID?: number
  lastModifiedDateTime?: Date
  publish?: number
  referenceLink?: string
  title?: string
}

export type KnowledgeBaseCategory = {
  id?: number
  description?: string
  name?: string
  parentCategoryID?: number
}

export type ModelByte = {}

export type ModelObject = {}

export type ModuleAccessResult = {
  modules?: Array<KeyValuePair2>
}

export type NotificationHistory = {
  id?: number
  companyID?: number
  entityNumber?: string
  entityTitle?: string
  initiatingContactID?: number
  initiatingResourceID?: number
  isActive?: boolean
  isDeleted?: boolean
  isTemplateJob?: boolean
  notificationHistoryTypeID?: number
  notificationSentTime?: Date
  opportunityID?: number
  projectID?: number
  quoteID?: number
  recipientDisplayName?: string
  recipientEmailAddress?: string
  taskID?: number
  templateName?: string
  ticketID?: number
  timeEntryID?: number
}

export type OperationResult = {
  itemId?: ModelObject
}

export type Opportunity<UDF extends string = string> = {
  id?: number
  advancedField1?: number
  advancedField2?: number
  advancedField3?: number
  advancedField4?: number
  advancedField5?: number
  amount?: number
  assessmentScore?: number
  barriers?: string
  closedDate?: Date
  companyID?: number
  contactID?: number
  cost?: number
  createDate?: Date
  creatorResourceID?: number
  description?: string
  helpNeeded?: string
  impersonatorCreatorResourceID?: number
  lastActivity?: Date
  leadSource?: number
  lossReason?: number
  lossReasonDetail?: string
  lostDate?: Date
  market?: string
  monthlyCost?: number
  monthlyRevenue?: number
  nextStep?: string
  onetimeCost?: number
  onetimeRevenue?: number
  opportunityCategoryID?: number
  organizationalLevelAssociationID?: number
  ownerResourceID?: number
  primaryCompetitor?: number
  probability?: number
  productID?: number
  projectedCloseDate?: Date
  promisedFulfillmentDate?: Date
  promotionName?: string
  quarterlyCost?: number
  quarterlyRevenue?: number
  rating?: number
  relationshipAssessmentScore?: number
  revenueSpread?: number
  revenueSpreadUnit?: string
  salesOrderID?: number
  salesProcessPercentComplete?: number
  semiannualCost?: number
  semiannualRevenue?: number
  stage?: number
  startDate?: Date
  status?: number
  technicalAssessmentScore?: number
  throughDate?: Date
  title?: string
  totalAmountMonths?: number
  useQuoteTotals?: boolean
  winReason?: number
  winReasonDetail?: string
  yearlyCost?: number
  yearlyRevenue?: number
  userDefinedFields?: UserDefinedField<UDF>[]
}

export type OpportunityAttachment = {
  id?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  contentType?: string
  creatorType?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentAttachmentID?: number
  parentID?: number
  publish?: number
  title?: string
  data?: string
  parentType?: number
  isTaskAttachment?: boolean
}

export type OpportunityCategory = {
  id?: number
  displayColorRGB?: number
  isActive?: boolean
  isGlobalDefault?: boolean
  name?: string
  nickname?: string
}

export type OrganizationalLevel1 = {
  id?: number
  description?: string
  isActive?: boolean
  name?: string
}

export type OrganizationalLevel2 = {
  id?: number
  description?: string
  isActive?: boolean
  name?: string
}

export type OrganizationalLevelAssociation = {
  id?: number
  isActive?: boolean
  organizationalLevel1ID?: number
  organizationalLevel2ID?: number
}

export type OrganizationalResource = {
  id?: number
  organizationalLevelAssociationID?: number
  resourceID?: number
}

export type PaymentTerm = {
  id?: number
  description?: string
  isActive?: boolean
  name?: string
  paymentDueInDays?: number
}

export type Phase = {
  id?: number
  createDate?: Date
  creatorResourceID?: number
  description?: string
  dueDate?: Date
  estimatedHours?: number
  externalID?: string
  isScheduled?: boolean
  lastActivityDateTime?: Date
  parentPhaseID?: number
  phaseNumber?: string
  projectID?: number
  startDate?: Date
  title?: string
}

export type PriceListMaterialCode = {
  id?: number
  billingCodeID?: number
  currencyID?: number
  unitPrice?: number
  usesInternalCurrencyPrice?: boolean
}

export type PriceListProduct = {
  id?: number
  currencyID?: number
  productID?: number
  unitPrice?: number
  usesInternalCurrencyPrice?: boolean
}

export type PriceListProductTier = {
  id?: number
  currencyID?: number
  productTierID?: number
  unitPrice?: number
  usesInternalCurrencyPrice?: boolean
}

export type PriceListRole = {
  id?: number
  currencyID?: number
  hourlyRate?: number
  roleID?: number
  usesInternalCurrencyPrice?: boolean
}

export type PriceListService = {
  id?: number
  currencyID?: number
  serviceID?: number
  unitPrice?: number
  usesInternalCurrencyPrice?: boolean
}

export type PriceListServiceBundle = {
  id?: number
  currencyID?: number
  serviceBundleID?: number
  unitPrice?: number
  usesInternalCurrencyPrice?: boolean
}

export type PriceListWorkTypeModifier = {
  id?: number
  currencyID?: number
  modifierType?: number
  modifierValue?: number
  usesInternalCurrencyPrice?: boolean
  workTypeModifierID?: number
}

export type Product<UDF extends string = string> = {
  id?: number
  billingType?: number
  chargeBillingCodeID?: number
  createdByResourceID?: number
  createdTime?: Date
  defaultVendorID?: number
  description?: string
  doesNotRequireProcurement?: boolean
  externalProductID?: string
  impersonatorCreatorResourceID?: number
  internalProductID?: string
  isActive?: boolean
  isEligibleForRma?: boolean
  isSerialized?: boolean
  link?: string
  manufacturerName?: string
  manufacturerProductName?: string
  markupRate?: number
  msrp?: number
  name?: string
  periodType?: number
  priceCostMethod?: number
  productBillingCodeID?: number
  productCategory?: number
  sku?: string
  unitCost?: number
  unitPrice?: number
  vendorProductNumber?: string
  defaultInstalledProductCategoryID?: number
  userDefinedFields?: UserDefinedField<UDF>[]
}

export type ProductNote = {
  id?: number
  createDateTime?: Date
  creatorResourceID?: number
  description?: string
  impersonatorCreatorResourceID?: number
  impersonatorUpdaterResourceID?: number
  lastActivityDate?: Date
  productID?: number
  title?: string
}

export type ProductTier = {
  id?: number
  productID?: number
  unitCost?: number
  unitPrice?: number
  upToUnitCount?: number
}

export type ProductVendor = {
  id?: number
  isActive?: boolean
  isDefault?: boolean
  productID?: number
  vendorCost?: number
  vendorID?: number
  vendorPartNumber?: string
}

export type Project<UDF extends string = string> = {
  id?: number
  actualBilledHours?: number
  actualHours?: number
  changeOrdersBudget?: number
  changeOrdersRevenue?: number
  companyID?: number
  companyOwnerResourceID?: number
  completedDateTime?: Date
  completedPercentage?: number
  contractID?: number
  createDateTime?: Date
  creatorResourceID?: number
  department?: number
  description?: string
  duration?: number
  endDateTime?: Date
  estimatedSalesCost?: number
  estimatedTime?: number
  extProjectNumber?: string
  extProjectType?: number
  impersonatorCreatorResourceID?: number
  laborEstimatedCosts?: number
  laborEstimatedMarginPercentage?: number
  laborEstimatedRevenue?: number
  lastActivityDateTime?: Date
  lastActivityPersonType?: number
  lastActivityResourceID?: number
  opportunityID?: number
  organizationalLevelAssociationID?: number
  originalEstimatedRevenue?: number
  projectCostEstimatedMarginPercentage?: number
  projectCostsBudget?: number
  projectCostsRevenue?: number
  projectLeadResourceID?: number
  projectName?: string
  projectNumber?: string
  projectType?: number
  purchaseOrderNumber?: string
  sgda?: number
  startDateTime?: Date
  status?: number
  statusDateTime?: Date
  statusDetail?: string
  userDefinedFields?: UserDefinedField<UDF>[]
}

export type ProjectAttachment = {
  id?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  contentType?: string
  creatorType?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentID?: number
  projectID?: number
  projectNoteID?: number
  publish?: number
  title?: string
  data?: string
  parentType?: number
  isTaskAttachment?: boolean
}

export type ProjectCharge = {
  id?: number
  billableAmount?: number
  billingCodeID?: number
  chargeType?: number
  contractServiceBundleID?: number
  contractServiceID?: number
  createDate?: Date
  creatorResourceID?: number
  datePurchased?: Date
  description?: string
  estimatedCost?: number
  extendedCost?: number
  internalCurrencyBillableAmount?: number
  internalCurrencyUnitPrice?: number
  internalPurchaseOrderNumber?: string
  isBillableToCompany?: boolean
  isBilled?: boolean
  name?: string
  notes?: string
  organizationalLevelAssociationID?: number
  productID?: number
  projectID?: number
  purchaseOrderNumber?: string
  status?: number
  statusLastModifiedBy?: number
  statusLastModifiedDate?: Date
  unitCost?: number
  unitPrice?: number
  unitQuantity?: number
}

export type ProjectNote = {
  id?: number
  createDateTime?: Date
  createdByContactID?: number
  creatorResourceID?: number
  description?: string
  impersonatorCreatorResourceID?: number
  impersonatorUpdaterResourceID?: number
  isAnnouncement?: boolean
  lastActivityDate?: Date
  noteType?: number
  projectID?: number
  publish?: number
  title?: string
}

export type ProjectNoteAttachment = {
  id?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  contentType?: string
  creatorType?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentAttachmentID?: number
  parentID?: number
  projectID?: number
  projectNoteID?: number
  publish?: number
  title?: string
  data?: string
  parentType?: number
  isTaskAttachment?: boolean
}

export type PurchaseApproval = {
  id?: number
  costType?: string
  isApproved?: boolean
  rejectNote?: string
}

export type PurchaseOrder = {
  id?: number
  cancelDateTime?: Date
  createDateTime?: Date
  creatorResourceID?: number
  externalPONumber?: string
  fax?: string
  freight?: number
  generalMemo?: string
  impersonatorCreatorResourceID?: number
  internalCurrencyFreight?: number
  latestEstimatedArrivalDate?: Date
  paymentTerm?: number
  phone?: string
  purchaseForCompanyID?: number
  purchaseOrderNumber?: string
  purchaseOrderTemplateID?: number
  shippingDate?: Date
  shippingType?: number
  shipToAddress1?: string
  shipToAddress2?: string
  shipToCity?: string
  shipToName?: string
  shipToPostalCode?: string
  shipToState?: string
  showEachTaxInGroup?: boolean
  showTaxCategory?: boolean
  status?: number
  submitDateTime?: Date
  taxRegionID?: number
  useItemDescriptionsFrom?: number
  vendorID?: number
  vendorInvoiceNumber?: string
  additionalVendorInvoiceNumbers?: string
}

export type PurchaseOrderItem = {
  id?: number
  chargeID?: number
  contractID?: number
  estimatedArrivalDate?: Date
  internalCurrencyUnitCost?: number
  inventoryLocationID?: number
  memo?: string
  orderID?: number
  productID?: number
  projectID?: number
  quantity?: number
  salesOrderID?: number
  ticketID?: number
  unitCost?: number
}

export type PurchaseOrderItemReceiving = {
  id?: number
  purchaseOrderItemID?: number
  quantityBackOrdered?: number
  quantityNowReceiving?: number
  quantityPreviouslyReceived?: number
  receiveDate?: Date
  receivedByResourceID?: number
  serialNumber?: string
  vendorInvoiceNumber?: string
}

export type Quote = {
  id?: number
  approvalStatus?: number
  approvalStatusChangedByResourceID?: number
  approvalStatusChangedDate?: Date
  billToLocationID?: number
  calculateTaxSeparately?: boolean
  comment?: string
  companyID?: number
  contactID?: number
  createDate?: Date
  creatorResourceID?: number
  description?: string
  effectiveDate?: Date
  expirationDate?: Date
  extApprovalContactResponse?: number
  extApprovalResponseDate?: Date
  extApprovalResponseSignature?: string
  externalQuoteNumber?: string
  groupByID?: number
  impersonatorCreatorResourceID?: number
  isActive?: boolean
  lastActivityDate?: Date
  lastModifiedBy?: number
  lastPublishedByResourceID?: number
  lastPublishedDateTime?: Date
  name?: string
  opportunityID?: number
  paymentTerm?: number
  paymentType?: number
  primaryQuote?: boolean
  proposalProjectID?: number
  purchaseOrderNumber?: string
  quoteNumber?: number
  quoteTemplateID?: number
  shippingType?: number
  shipToLocationID?: number
  showEachTaxInGroup?: boolean
  showTaxCategory?: boolean
  soldToLocationID?: number
  taxRegionID?: number
}

export type QuoteItem = {
  id?: number
  averageCost?: number
  chargeID?: number
  description?: string
  expenseID?: number
  highestCost?: number
  internalCurrencyLineDiscount?: number
  internalCurrencyUnitDiscount?: number
  internalCurrencyUnitPrice?: number
  isOptional?: boolean
  isTaxable?: boolean
  laborID?: number
  lineDiscount?: number
  markupRate?: number
  name?: string
  percentageDiscount?: number
  periodType?: number
  productID?: number
  quantity?: number
  quoteID?: number
  quoteItemType?: number
  serviceBundleID?: number
  serviceID?: number
  shippingID?: number
  sortOrderID?: number
  taxCategoryID?: number
  totalEffectiveTax?: number
  unitCost?: number
  unitDiscount?: number
  unitPrice?: number
}

export type QuoteLocation = {
  id?: number
  address1?: string
  address2?: string
  city?: string
  postalCode?: string
  state?: string
}

export type QuoteTemplate = {
  id?: number
  calculateTaxSeparately?: boolean
  createDate?: Date
  createdBy?: number
  currencyNegativeFormat?: string
  currencyPositiveFormat?: string
  dateFormat?: number
  description?: string
  displayTaxCategorySuperscripts?: boolean
  isActive?: boolean
  lastActivityBy?: number
  lastActivityDate?: Date
  name?: string
  numberFormat?: number
  pageLayout?: number
  pageNumberFormat?: number
  showEachTaxInGroup?: boolean
  showGridHeader?: boolean
  showTaxCategory?: boolean
  showVerticalGridLines?: boolean
}

export type Resource = {
  id?: number
  accountingReferenceID?: string
  dateFormat?: string
  defaultServiceDeskRoleID?: number
  email?: string
  email2?: string
  email3?: string
  emailTypeCode?: string
  emailTypeCode2?: string
  emailTypeCode3?: string
  firstName?: string
  gender?: string
  greeting?: number
  hireDate?: Date
  homePhone?: string
  initials?: string
  internalCost?: number
  isActive?: boolean
  lastName?: string
  licenseType?: number
  locationID?: number
  middleName?: string
  mobilePhone?: string
  numberFormat?: string
  officeExtension?: string
  officePhone?: string
  payrollIdentifier?: string
  payrollType?: number
  resourceType?: string
  suffix?: number
  surveyResourceRating?: number
  timeFormat?: string
  title?: string
  travelAvailabilityPct?: string
  userName?: string
  userType?: number
}

export type ResourceAttachment = {
  id?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  contentType?: string
  creatorType?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentID?: number
  publish?: number
  resourceID?: number
  title?: string
  data?: string
  parentType?: number
  isTaskAttachment?: boolean
}

export type ResourceDailyAvailability = {
  id?: number
  resourceID?: number
  sundayAvailableHours?: number
  mondayAvailableHours?: number
  tuesdayAvailableHours?: number
  wednesdayAvailableHours?: number
  thursdayAvailableHours?: number
  fridayAvailableHours?: number
  saturdayAvailableHours?: number
  weeklyBillableHoursGoal?: number
  travelAvailability?: string
}

export type ResourceRole = {
  id?: number
  departmentID?: number
  isActive?: boolean
  queueID?: number
  resourceID?: number
  roleID?: number
}

export type ResourceRoleDepartment = {
  id?: number
  departmentID?: number
  isActive?: boolean
  isDefault?: boolean
  isDepartmentLead?: boolean
  resourceID?: number
  roleID?: number
}

export type ResourceRoleQueue = {
  id?: number
  queueID?: number
  resourceID?: number
}

export type ResourceServiceDeskRole = {
  id?: number
  isActive?: boolean
  isDefault?: boolean
  resourceID?: number
  roleID?: number
}

export type ResourceSkill = {
  id?: number
  resourceID?: number
  skillDescription?: string
  skillID?: number
  skillLevel?: number
}

export type ResourceTimeOffAdditional = {
  id?: number
  resourceID?: number
  currentYear?: number
  currentYearAdditionalVacationTime?: number
  currentYearAdditionalPersonalTime?: number
  currentYearAdditionalSickTime?: number
  currentYearAdditionalFloatingHoliday?: number
  currentYearAnnualVacationTime?: number
  currentYearAnnualPersonalTime?: number
  currentYearAnnualSickTime?: number
  currentYearAnnualFloatingHoliday?: number
  nextYear?: number
  nextYearAdditionalVacationTime?: number
  nextYearAdditionalPersonalTime?: number
  nextYearAdditionalSickTime?: number
  nextYearAdditionalFloatingHoliday?: number
  nextYearAnnualVacationTime?: number
  nextYearAnnualPersonalTime?: number
  nextYearAnnualSickTime?: number
  nextYearAnnualFloatingHoliday?: number
}

export type ResourceTimeOffApprover = {
  id?: number
  resourceID?: number
  approverResourceID?: number
  approvalLevel?: number
}

export type ResourceTimeOffBalance = {
  id?: number
  resourceID?: number
  floatingHolidayAnnualAllowance?: number
  floatingHolidayBalance?: number
  floatingHolidayPlanned?: number
  floatingHolidayUsed?: number
  floatingHolidayWaitingApproval?: number
  personalTimeAnnualAllowance?: number
  personalTimeBalance?: number
  personalTimePlanned?: number
  personalTimeUsed?: number
  personalTimeWaitingApproval?: number
  sickTimeAnnualAllowance?: number
  sickTimeBalance?: number
  sickTimePlanned?: number
  sickTimeUsed?: number
  sickTimeWaitingApproval?: number
  vacationTimeAnnualAllowance?: number
  vacationTimeBalance?: number
  vacationTimePlanned?: number
  vacationTimeUsed?: number
  vacationTimeWaitingApproval?: number
  year?: number
}

export type Role = {
  id?: number
  description?: string
  hourlyFactor?: number
  hourlyRate?: number
  isActive?: boolean
  isExcludedFromNewContracts?: boolean
  isSystemRole?: boolean
  name?: string
  quoteItemDefaultTaxCategoryId?: number
  roleType?: number
}

export type SalesOrder<UDF extends string = string> = {
  id?: number
  additionalBillToAddressInformation?: string
  additionalShipToAddressInformation?: string
  billingAddress1?: string
  billingAddress2?: string
  billToCity?: string
  billToCountryID?: number
  billToPostalCode?: string
  billToState?: string
  companyID?: number
  contactID?: number
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  organizationalLevelAssociationID?: number
  ownerResourceID?: number
  promisedFulfillmentDate?: Date
  salesOrderDate?: Date
  shipToAddress1?: string
  shipToAddress2?: string
  shipToCity?: string
  shipToCountryID?: number
  shipToPostalCode?: string
  shipToState?: string
  status?: number
  title?: string
  userDefinedFields?: UserDefinedField<UDF>[]
}

export type SalesOrderAttachment = {
  id?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  contentType?: string
  creatorType?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentID?: number
  publish?: number
  salesOrderID?: number
  title?: string
  data?: string
  parentType?: number
  isTaskAttachment?: boolean
}

export type Service<UDF extends string = string> = {
  id?: number
  billingCodeID?: number
  createDate?: Date
  creatorResourceID?: number
  description?: string
  invoiceDescription?: string
  isActive?: boolean
  lastModifiedDate?: Date
  markupRate?: number
  name?: string
  periodType?: number
  serviceLevelAgreementID?: number
  unitCost?: number
  unitPrice?: number
  updateResourceID?: number
  vendorCompanyID?: number
  manufacturerServiceProvider?: string
  manufacturerServiceProviderProductNumber?: string
  catalogNumberPartNumber?: string
  sku?: string
  internalID?: string
  externalID?: string
  url?: string
  userDefinedFields?: UserDefinedField<UDF>[]
}

export type ServiceBundle<UDF extends string = string> = {
  id?: number
  billingCodeID?: number
  createDate?: Date
  creatorResourceID?: number
  description?: string
  invoiceDescription?: string
  isActive?: boolean
  lastModifiedDate?: Date
  name?: string
  percentageDiscount?: number
  periodType?: number
  serviceLevelAgreementID?: number
  unitCost?: number
  unitDiscount?: number
  unitPrice?: number
  updateResourceID?: number
  manufacturerServiceProvider?: string
  manufacturerServiceProviderProductNumber?: string
  catalogNumberPartNumber?: string
  sku?: string
  internalID?: string
  externalID?: string
  url?: string
  userDefinedFields?: UserDefinedField<UDF>[]
}

export type ServiceBundleService = {
  id?: number
  serviceBundleID?: number
  serviceID?: number
}

export type ServiceCall = {
  id?: number
  cancelationNoticeHours?: number
  canceledByResourceID?: number
  canceledDateTime?: Date
  companyID?: number
  companyLocationID?: number
  createDateTime?: Date
  creatorResourceID?: number
  description?: string
  duration?: number
  endDateTime?: Date
  impersonatorCreatorResourceID?: number
  isComplete?: number
  lastModifiedDateTime?: Date
  startDateTime?: Date
  status?: number
}

export type ServiceCallTask = {
  id?: number
  serviceCallID?: number
  taskID?: number
}

export type ServiceCallTaskResource = {
  id?: number
  resourceID?: number
  serviceCallTaskID?: number
}

export type ServiceCallTicket = {
  id?: number
  serviceCallID?: number
  ticketID?: number
}

export type ServiceCallTicketResource = {
  id?: number
  resourceID?: number
  serviceCallTicketID?: number
}

export type ServiceLevelAgreementResults = {
  id?: number
  firstResponseElapsedHours?: number
  firstResponseInitiatingResourceID?: number
  firstResponseResourceID?: number
  isFirstResponseMet?: boolean
  isResolutionMet?: boolean
  isResolutionPlanMet?: boolean
  resolutionElapsedHours?: number
  resolutionPlanElapsedHours?: number
  resolutionPlanResourceID?: number
  resolutionResourceID?: number
  serviceLevelAgreementName?: string
  ticketID?: number
}

export type ShippingType = {
  id?: number
  billingCodeID?: number
  description?: string
  isActive?: boolean
  name?: string
}

export type Skill = {
  id?: number
  categoryID?: number
  description?: string
  isActive?: boolean
  name?: string
}

export type Subscription<UDF extends string = string> = {
  id?: number
  configurationItemID?: number
  description?: string
  effectiveDate?: Date
  expirationDate?: Date
  impersonatorCreatorResourceID?: number
  materialCodeID?: number
  organizationalLevelAssociationID?: number
  periodCost?: number
  periodPrice?: number
  periodType?: number
  purchaseOrderNumber?: string
  status?: number
  subscriptionName?: string
  totalCost?: number
  totalPrice?: number
  vendorID?: number
  userDefinedFields?: UserDefinedField<UDF>[]
}

export type SubscriptionPeriod = {
  id?: number
  periodCost?: number
  periodDate?: Date
  periodPrice?: number
  postedDate?: Date
  purchaseOrderNumber?: string
  subscriptionID?: number
}

export type Survey = {
  id?: number
  description?: string
  displayName?: string
  name?: string
}

export type SurveyResults = {
  id?: number
  companyID?: number
  companyRating?: number
  completeDate?: Date
  contactID?: number
  contactRating?: number
  resourceRating?: number
  sendDate?: Date
  surveyID?: number
  surveyRating?: number
  ticketID?: number
}

export type Tag = {
  id?: number
  createDateTime?: Date
  isActive?: boolean
  isExcludedFromAutomaticTagging?: boolean
  isSystem?: boolean
  label?: string
  lastModifiedDateTime?: Date
  tagGroupID?: number
}

export type TagAlias = {
  id?: number
  alias?: string
  tagID?: number
}

export type TagGroup = {
  id?: number
  displayColor?: number
  isActive?: boolean
  isSystem?: boolean
  label?: string
}

export type Task<UDF extends string = string> = {
  id?: number
  assignedResourceID?: number
  assignedResourceRoleID?: number
  billingCodeID?: number
  canClientPortalUserCompleteTask?: boolean
  companyLocationID?: number
  completedByResourceID?: number
  completedByType?: number
  completedDateTime?: Date
  createDateTime?: Date
  creatorResourceID?: number
  creatorType?: number
  departmentID?: number
  description?: string
  endDateTime?: Date
  estimatedHours?: number
  externalID?: string
  hoursToBeScheduled?: number
  isTaskBillable?: boolean
  isVisibleInClientPortal?: boolean
  lastActivityDateTime?: Date
  lastActivityPersonType?: number
  lastActivityResourceID?: number
  phaseID?: number
  priority?: number
  priorityLabel?: number
  projectID?: number
  purchaseOrderNumber?: string
  remainingHours?: number
  startDateTime?: Date
  status?: number
  taskCategoryID?: number
  taskNumber?: string
  taskType?: number
  title?: string
  userDefinedFields?: UserDefinedField<UDF>[]
}

export type TaskAttachment = {
  id?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  contentType?: string
  creatorType?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentAttachmentID?: number
  parentID?: number
  publish?: number
  taskID?: number
  taskNoteID?: number
  timeEntryID?: number
  title?: string
  data?: string
  isTaskAttachment?: boolean
  parentType?: number
}

export type TaskNote = {
  id?: number
  createDateTime?: Date
  creatorResourceID?: number
  createdByContactID?: number
  description?: string
  impersonatorCreatorResourceID?: number
  impersonatorUpdaterResourceID?: number
  lastActivityDate?: Date
  noteType?: number
  publish?: number
  taskID?: number
  title?: string
}

export type TaskNoteAttachment = {
  id?: number
  isTaskAttachment?: boolean
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  contentType?: string
  creatorType?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentID?: number
  publish?: number
  taskID?: number
  taskNoteID?: number
  title?: string
  data?: string
  parentType?: number
}

export type TaskPredecessor = {
  id?: number
  lagDays?: number
  predecessorTaskID?: number
  successorTaskID?: number
}

export type TaskSecondaryResource = {
  id?: number
  resourceID?: number
  roleID?: number
  taskID?: number
}

export type Tax = {
  id?: number
  isCompounded?: boolean
  taxCategoryID?: number
  taxName?: string
  taxRate?: number
  taxRegionID?: number
}

export type TaxCategory = {
  id?: number
  description?: string
  isActive?: boolean
  name?: string
}

export type TaxRegion = {
  id?: number
  isActive?: boolean
  name?: string
}

export type ThresholdStatusResult = {
  externalRequestThreshold?: number
  requestThresholdTimeframe?: number
  currentTimeframeRequestCount?: number
}

export type Ticket<UDF extends string = string> = {
  id?: number
  apiVendorID?: number
  assignedResourceID?: number
  assignedResourceRoleID?: number
  billingCodeID?: number
  changeApprovalBoard?: number
  changeApprovalStatus?: number
  changeApprovalType?: number
  changeInfoField1?: string
  changeInfoField2?: string
  changeInfoField3?: string
  changeInfoField4?: string
  changeInfoField5?: string
  companyID?: number
  companyLocationID?: number
  completedByResourceID?: number
  completedDate?: Date
  configurationItemID?: number
  contactID?: number
  contractID?: number
  contractServiceBundleID?: number
  contractServiceID?: number
  createDate?: Date
  createdByContactID?: number
  creatorResourceID?: number
  creatorType?: number
  currentServiceThermometerRating?: number
  description?: string
  dueDateTime?: Date
  estimatedHours?: number
  externalID?: string
  firstResponseAssignedResourceID?: number
  firstResponseDateTime?: Date
  firstResponseDueDateTime?: Date
  firstResponseInitiatingResourceID?: number
  hoursToBeScheduled?: number
  impersonatorCreatorResourceID?: number
  isAssignedToComanaged?: boolean
  issueType?: number
  isVisibleToComanaged?: boolean
  lastActivityDate?: Date
  lastActivityPersonType?: number
  lastActivityResourceID?: number
  lastCustomerNotificationDateTime?: Date
  lastCustomerVisibleActivityDateTime?: Date
  lastTrackedModificationDateTime?: Date
  monitorID?: number
  monitorTypeID?: number
  opportunityID?: number
  organizationalLevelAssociationID?: number
  previousServiceThermometerRating?: number
  priority?: number
  problemTicketId?: number
  projectID?: number
  purchaseOrderNumber?: string
  queueID?: number
  resolution?: string
  resolutionPlanDateTime?: Date
  resolutionPlanDueDateTime?: Date
  resolvedDateTime?: Date
  resolvedDueDateTime?: Date
  rmaStatus?: number
  rmaType?: number
  rmmAlertID?: string
  serviceLevelAgreementHasBeenMet?: boolean
  serviceLevelAgreementID?: number
  serviceLevelAgreementPausedNextEventHours?: number
  serviceThermometerTemperature?: number
  source?: number
  status?: number
  subIssueType?: number
  ticketCategory?: number
  ticketNumber?: string
  ticketType?: number
  title?: string
  userDefinedFields?: UserDefinedField<UDF>[]
}

export type TicketAdditionalConfigurationItem = {
  id?: number
  configurationItemID?: number
  ticketID?: number
}

export type TicketAdditionalContact = {
  id?: number
  contactID?: number
  ticketID?: number
}

export type TicketAttachment = {
  id?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  contentType?: string
  creatorType?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentAttachmentID?: number
  parentID?: number
  publish?: number
  ticketID?: number
  ticketNoteID?: number
  timeEntryID?: number
  title?: string
  data?: string
  parentType?: number
  isTaskAttachment?: boolean
}

export type TicketCategory = {
  id?: number
  displayColorRGB?: number
  isActive?: boolean
  isApiOnly?: boolean
  isGlobalDefault?: boolean
  name?: string
  nickname?: string
}

export type TicketCategoryFieldDefaults = {
  id?: number
  description?: string
  estimatedHours?: number
  issueTypeID?: number
  organizationalLevelAssociationID?: number
  priority?: number
  purchaseOrderNumber?: string
  queueID?: number
  resolution?: string
  serviceLevelAgreementID?: number
  sourceID?: number
  status?: number
  subIssueTypeID?: number
  ticketCategoryID?: number
  ticketTypeID?: number
  title?: string
  workTypeID?: number
}

export type TicketChangeRequestApproval = {
  id?: number
  approveRejectDateTime?: Date
  approveRejectNote?: string
  contactID?: number
  isApproved?: boolean
  resourceID?: number
  ticketID?: number
}

export type TicketCharge = {
  id?: number
  billableAmount?: number
  billingCodeID?: number
  chargeType?: number
  contractServiceBundleID?: number
  contractServiceID?: number
  createDate?: Date
  creatorResourceID?: number
  datePurchased?: Date
  description?: string
  extendedCost?: number
  internalCurrencyBillableAmount?: number
  internalCurrencyUnitPrice?: number
  internalPurchaseOrderNumber?: string
  isBillableToCompany?: boolean
  isBilled?: boolean
  name?: string
  notes?: string
  organizationalLevelAssociationID?: number
  productID?: number
  purchaseOrderNumber?: string
  status?: number
  statusLastModifiedBy?: number
  statusLastModifiedDate?: Date
  ticketID?: number
  unitCost?: number
  unitPrice?: number
  unitQuantity?: number
}

export type TicketChecklistItem = {
  id?: number
  completedByResourceID?: number
  completedDateTime?: Date
  isCompleted?: boolean
  isImportant?: boolean
  itemName?: string
  knowledgebaseArticleID?: number
  position?: number
  ticketID?: number
}

export type TicketChecklistLibrary = {
  id?: number
  checklistLibraryID?: number
  ticketID?: number
}

export type TicketHistory = {
  id?: number
  action?: string
  date?: Date
  detail?: string
  resourceID?: number
  ticketID?: number
}

export type TicketNote = {
  id?: number
  createDateTime?: Date
  createdByContactID?: number
  creatorResourceID?: number
  description?: string
  impersonatorCreatorResourceID?: number
  impersonatorUpdaterResourceID?: number
  lastActivityDate?: Date
  noteType?: number
  publish?: number
  ticketID?: number
  title?: string
}

export type TicketNoteAttachment = {
  id?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  contentType?: string
  creatorType?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentID?: number
  publish?: number
  ticketID?: number
  ticketNoteID?: number
  title?: string
  data?: string
  parentType?: number
  isTaskAttachment?: boolean
}

export type TicketNoteWebhook = {
  id?: number
  deactivationUrl?: string
  isActive?: boolean
  isReady?: boolean
  isSubscribedToCreateEvents?: boolean
  isSubscribedToDeleteEvents?: boolean
  isSubscribedToUpdateEvents?: boolean
  name?: string
  notificationEmailAddress?: string
  ownerResourceID?: number
  secretKey?: string
  sendThresholdExceededNotification?: boolean
  webhookGUID?: string
  webhookUrl?: string
}

export type TicketNoteWebhookExcludedResource = {
  id?: number
  resourceID?: number
  webhookID?: number
}

export type TicketNoteWebhookField = {
  id?: number
  fieldID?: number
  isDisplayAlwaysField?: boolean
  isSubscribedField?: boolean
  webhookID?: number
}

export type TicketRmaCredit = {
  id?: number
  creditAmount?: number
  creditDetails?: string
  internalCurrencyCreditAmount?: number
  ticketID?: number
}

export type TicketSecondaryResource = {
  id?: number
  resourceID?: number
  roleID?: number
  ticketID?: number
}

export type TicketTagAssociation = {
  id?: number
  tagID?: number
  ticketID?: number
}

export type TicketWebhook = {
  id?: number
  deactivationUrl?: string
  isActive?: boolean
  isReady?: boolean
  isSubscribedToCreateEvents?: boolean
  isSubscribedToDeleteEvents?: boolean
  isSubscribedToUpdateEvents?: boolean
  name?: string
  notificationEmailAddress?: string
  ownerResourceID?: number
  secretKey?: string
  sendThresholdExceededNotification?: boolean
  webhookGUID?: string
  webhookUrl?: string
}

export type TicketWebhookExcludedResource = {
  id?: number
  resourceID?: number
  webhookID?: number
}

export type TicketWebhookField = {
  id?: number
  fieldID?: number
  isDisplayAlwaysField?: boolean
  isSubscribedField?: boolean
  webhookID?: number
}

export type TicketWebhookUdfField = {
  id?: number
  isDisplayAlwaysField?: boolean
  isSubscribedField?: boolean
  udfFieldID?: number
  webhookID?: number
}

export type TimeEntry = {
  id?: number
  billingApprovalDateTime?: Date
  billingApprovalLevelMostRecent?: number
  billingApprovalResourceID?: number
  billingCodeID?: number
  contractID?: number
  contractServiceBundleID?: number
  contractServiceID?: number
  createDateTime?: Date
  creatorUserID?: number
  dateWorked?: Date
  endDateTime?: Date
  hoursToBill?: number
  hoursWorked?: number
  impersonatorCreatorResourceID?: number
  impersonatorUpdaterResourceID?: number
  internalBillingCodeID?: number
  internalNotes?: string
  isInternalNotesVisibleToComanaged?: boolean
  isNonBillable?: boolean
  lastModifiedDateTime?: Date
  lastModifiedUserID?: number
  offsetHours?: number
  resourceID?: number
  roleID?: number
  showOnInvoice?: boolean
  startDateTime?: Date
  summaryNotes?: string
  taskID?: number
  ticketID?: number
  timeEntryType?: number
}

export type TimeEntryAttachment = {
  id?: number
  attachDate?: Date
  attachedByContactID?: number
  attachedByResourceID?: number
  attachmentType?: string
  contentType?: string
  creatorType?: number
  fileSize?: number
  fullPath?: string
  impersonatorCreatorResourceID?: number
  opportunityID?: number
  parentID?: number
  publish?: number
  taskID?: number
  ticketID?: number
  timeEntryID?: number
  title?: string
  data?: string
  parentType?: number
  isTaskAttachment?: boolean
}

export type TimeOffRequest = {
  id?: number
  approvedDateTime?: Date
  approveRejectResourceID?: number
  createdByResourceID?: number
  createDateTime?: Date
  endTime?: Date
  hours?: number
  impersonatorApproveRejectResourceID?: number
  lastModifiedByResourceID?: number
  lastModifiedDateTime?: Date
  lastApprovedLevel?: number
  reason?: string
  rejectReason?: string
  requestDate?: Date
  resourceID?: number
  startTime?: Date
  status?: number
  timeOffRequestType?: number
}

export type TimeOffRequestReject = {
  id?: number
  timeOffRequestID?: number
  reason?: string
}

export type UserDefinedField<Name extends string = string> = {
  name: Name
  value: string
}

export type UserDefinedFieldDefinition = {
  id?: number
  createDate?: Date
  crmToProjectUdfId?: number
  dataType?: number
  defaultValue?: any
  description?: string
  displayFormat?: number
  isActive?: boolean
  isEncrypted?: boolean
  isFieldMapping?: boolean
  isPrivate?: boolean
  isProtected?: boolean
  isRequired?: boolean
  isVisibleToClientPortal?: boolean
  mergeVariableName?: string
  name?: string
  numberOfDecimalPlaces?: number
  sortOrder?: number
  udfType?: number
}

export type UserDefinedFieldListItem = {
  id?: number
  createDate?: Date
  isActive?: boolean
  udfFieldId?: number
  valueForDisplay?: string
  valueForExport?: string
}

export type ValueItem = {
  elementList?: Array<CollectionItem>
  boolValue?: boolean
  longValue?: number
  stringValue?: string
}

export type WebhookEventErrorLog = {
  id?: number
  accountWebhookID?: number
  contactWebhookID?: number
  createDateTime?: Date
  errorMessage?: string
  payload?: string
  sequenceNumber?: number
}

export type WorkTypeModifier = {
  id?: number
  modifierType?: number
  modifierValue?: number
}

export type ZoneInformationResult = {
  zoneName?: string
  url?: string
  webUrl?: string
  ci?: number
}
